{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmagly/Desktop/ReactStoreConcept/src/components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  checkoutToken\n}) => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const subdivisons = Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n  }));\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisons = async countryCode => {\n    const {\n      subdivisons\n    } = await commerce.services.localeListShippingSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisons);\n    setShippingSubdivision(Object.keys(subdivisons)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country,\n      region\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisons(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstname\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastname\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP / Postal code \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Subdivison\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubdivision,\n              fullWidth: true,\n              onChange: e => setShippingSubdivision(e.target.value),\n              children: subdivisons.map(subdivison => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: subdivison.id,\n                children: subdivison.label\n              }, subdivison.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingOption,\n              fullWidth: true,\n              onChange: e => setShippingOption(e.target.value),\n              children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.id,\n                children: option.label\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            variant: \"outlined\",\n            to: \"/cart\",\n            children: \"Back to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"yBkjz4WhZIg8xmhG/wRYC7utNEg=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n{\n  /*\n                          <Grid item xs={12} sm={6}>\n                             <InputLabel>Shipping Options</InputLabel>\n                             <Select value={} fullWidth onChange={}>\n                                 <MenuItem key={} value={}>\n                                     Select Me\n                                 </MenuItem>\n                             </Select>\n                          </Grid>\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/danielsmagly/Desktop/ReactStoreConcept/src/components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Link","commerce","FormInput","AddressForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","countries","Object","entries","map","code","name","id","label","subdivisons","options","sO","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisons","countryCode","localeListShippingSubdivisions","fetchShippingOptions","country","region","checkout","getShippingOptions","e","target","value","subdivison","option","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\n\nimport {commerce} from '../../lib/commerce'\n\nimport FormInput from './CustomTextField'\n\nconst AddressForm = ({ checkoutToken }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}))\n    const subdivisons = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}))\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisons = async (countryCode) => {\n        const { subdivisons } = await commerce.services.localeListShippingSubdivisions(countryCode)\n\n        setShippingSubdivisions(subdivisons);\n        setShippingSubdivision(Object.keys(subdivisons)[0]);\n\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, []);\n\n    useEffect (() => {\n        if(shippingCountry) fetchSubdivisons(shippingCountry);\n        \n    }, [shippingCountry]);\n\n    useEffect (() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision])\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstname' label=\"First name\"/>\n                        <FormInput required name='lastname' label=\"Last name\"/>\n                        <FormInput required name='address1' label=\"Address\"/>\n                        <FormInput required name='email' label=\"Email \"/>\n                        <FormInput required name='city' label=\"City \"/>\n                        <FormInput required name='zip' label=\"ZIP / Postal code \"/>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                     {country.label}\n                                    </MenuItem>\n                                ))}\n                                \n                            </Select>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivison</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisons.map((subdivison) => (\n                                    <MenuItem key={subdivison.id} value={subdivison.id}>\n                                     {subdivison.label}\n                                    </MenuItem>\n                                ))}\n                                \n                            </Select>\n\n                             </Grid>\n                             <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                     {option.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n\n                        </Grid>\n\n                        </Grid>\n                        <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n                        \n                    \n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm;\n\n{/*\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={} fullWidth onChange={}>\n                                <MenuItem key={} value={}>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n\n                        </Grid>\n*/}"]},"metadata":{},"sourceType":"module"}