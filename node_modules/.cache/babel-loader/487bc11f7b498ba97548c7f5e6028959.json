{"ast":null,"code":"import React from'react';import{Typography,Button,Card,CardActions,CardContent,CardMedia}from'@material-ui/core';import AddBoxIcon from'@material-ui/icons/AddBox';import IndeterminateCheckBoxIcon from'@material-ui/icons/IndeterminateCheckBox';import useStyles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartItem=function CartItem(_ref){var item=_ref.item,onUpdateCartQty=_ref.onUpdateCartQty,onRemoveFromCart=_ref.onRemoveFromCart;var classes=useStyles();return/*#__PURE__*/_jsxs(Card,{className:\"cart-item\",children:[/*#__PURE__*/_jsx(CardMedia,{image:item.media.source,alt:item.name,className:classes.media}),/*#__PURE__*/_jsxs(CardContent,{className:classes.cardContent,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:item.name}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:item.line_total.formatted_with_symbol})]}),/*#__PURE__*/_jsxs(CardActions,{className:classes.cardActions,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.buttons2,children:/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"small\",onClick:function onClick(){return onUpdateCartQty(item.id,item.quantity-1);},children:/*#__PURE__*/_jsx(IndeterminateCheckBoxIcon,{})})}),/*#__PURE__*/_jsx(\"div\",{className:classes.buttons1,children:/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[\" \",item.quantity,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{className:classes.buttons3,children:/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"small\",onClick:function onClick(){return onUpdateCartQty(item.id,item.quantity+1);},children:/*#__PURE__*/_jsx(AddBoxIcon,{})})}),/*#__PURE__*/_jsx(\"div\",{className:classes.buttons3,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"button\",color:\"secondary\",onClick:function onClick(){return onRemoveFromCart(item.id);},children:\"Remove\"})})]})]});};export default CartItem;","map":{"version":3,"sources":["/Users/danielsmagly/Desktop/ReactStoreConcept/src/components/Cart/CartItem/CartItem.jsx"],"names":["React","Typography","Button","Card","CardActions","CardContent","CardMedia","AddBoxIcon","IndeterminateCheckBoxIcon","useStyles","CartItem","item","onUpdateCartQty","onRemoveFromCart","classes","media","source","name","cardContent","line_total","formatted_with_symbol","cardActions","buttons2","id","quantity","buttons1","buttons3"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,IAA7B,CAAmCC,WAAnC,CAAgDC,WAAhD,CAA6DC,SAA7D,KAA8E,mBAA9E,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,yBAAP,KAAsC,0CAAtC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiD,IAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,eAAwC,MAAxCA,eAAwC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CAChE,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CAIA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,wBACE,KAAC,SAAD,EAAW,KAAK,CAAEE,IAAI,CAACI,KAAL,CAAWC,MAA7B,CAAqC,GAAG,CAAEL,IAAI,CAACM,IAA/C,CAAqD,SAAS,CAAEH,OAAO,CAACC,KAAxE,EADF,cAEE,MAAC,WAAD,EAAa,SAAS,CAAED,OAAO,CAACI,WAAhC,wBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,UAA0BP,IAAI,CAACM,IAA/B,EADJ,cAEI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,UAA0BN,IAAI,CAACQ,UAAL,CAAgBC,qBAA1C,EAFJ,GAFF,cAME,MAAC,WAAD,EAAa,SAAS,CAAEN,OAAO,CAACO,WAAhC,wBACI,YAAK,SAAS,CAAEP,OAAO,CAACQ,QAAxB,uBAEI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,OAA3B,CAAmC,OAAO,CAAE,yBAAMV,CAAAA,eAAe,CAACD,IAAI,CAACY,EAAN,CAAUZ,IAAI,CAACa,QAAL,CAAgB,CAA1B,CAArB,EAA5C,uBACG,KAAC,yBAAD,IADH,EAFJ,EADJ,cAOQ,YAAK,SAAS,CAAEV,OAAO,CAACW,QAAxB,uBAEA,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,eAA2Bd,IAAI,CAACa,QAAhC,OAFA,EAPR,cAWI,YAAK,SAAS,CAAEV,OAAO,CAACY,QAAxB,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,OAA3B,CAAmC,OAAO,CAAE,yBAAMd,CAAAA,eAAe,CAACD,IAAI,CAACY,EAAN,CAAUZ,IAAI,CAACa,QAAL,CAAgB,CAA1B,CAArB,EAA5C,uBACG,KAAC,UAAD,IADH,EADJ,EAXJ,cAgBI,YAAK,SAAS,CAAEV,OAAO,CAACY,QAAxB,uBACA,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,KAAK,CAAC,WAAhD,CAA4D,OAAO,CAAE,yBAAMb,CAAAA,gBAAgB,CAACF,IAAI,CAACY,EAAN,CAAtB,EAArE,oBADA,EAhBJ,GANF,GADF,CA+BD,CApCD,CAsCA,cAAeb,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia } from '@material-ui/core';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\n\nimport useStyles from './styles';\n\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\n  const classes = useStyles();\n\n\n\n  return (\n    <Card className=\"cart-item\">\n      <CardMedia image={item.media.source} alt={item.name} className={classes.media} />\n      <CardContent className={classes.cardContent}>\n          <Typography variant=\"h4\">{item.name}</Typography>\n          <Typography variant=\"h5\">{item.line_total.formatted_with_symbol}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n          <div className={classes.buttons2}>\n\n              <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity - 1)}>\n                 <IndeterminateCheckBoxIcon/> \n              </Button>\n              </div>\n              <div className={classes.buttons1}>\n\n              <Typography variant=\"h5\"> {item.quantity} </Typography>\n              </div>\n          <div className={classes.buttons3}>\n              <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity + 1)}>\n                 <AddBoxIcon/> \n              </Button>\n          </div>\n          <div className={classes.buttons3}>\n          <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={() => onRemoveFromCart(item.id)}>Remove</Button>\n          </div>\n          \n      </CardActions>\n      \n    </Card>\n  );\n};\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}